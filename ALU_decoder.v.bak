module ALU_decoder (
    input logic [2:0] funct3,
    input logic       funct7,      
    input logic [1:0] alu_op,
    output logic [3:0] alu_control
);
    always_comb begin
        case (alu_op)
            2'b00: alu_control = 4'b0010; // default: ADD (for lw/sw/addi)
            2'b01: alu_control = 4'b0110; // SUB (for beq)
            2'b10: begin                 // R-type or I-type
                case (funct3)
                    3'b000: alu_control = (funct7 == 1'b1) ? 4'b0110 : 4'b0010; // sub or add
                    3'b111: alu_control = 4'b0000; // and
                    3'b110: alu_control = 4'b0001; // or
                    3'b010: alu_control = 4'b0111; // slt
                    default: alu_control = 4'b0000;
                endcase
            end
            default: alu_control = 4'b0000;
        endcase
    end
endmodule

