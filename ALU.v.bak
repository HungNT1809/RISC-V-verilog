module ALU (
    input logic [31:0] src1,
    input logic [31:0] src2,
    input logic [3:0] alu_control,
    output logic [31:0] result,
    output logic zero
);
    always_comb begin
        case (alu_control)
            4'b0000: result = src1 & src2;              // AND
            4'b0001: result = src1 | src2;              // OR
            4'b0010: result = src1 + src2;              // ADD
            4'b0110: result = src1 - src2;              // SUB
            4'b0111: result = ($signed(src1) < $signed(src2)) ? 32'b1 : 32'b0; // SLT
            4'b1100: result = ~(src1 | src2);           // NOR (optional)
            default: result = 32'b0;
        endcase
    end

    assign zero = (result == 32'b0);
endmodule

